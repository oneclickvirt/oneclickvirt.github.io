import{_ as s,v as a,b as o,R as l}from"./chunks/framework.70afa331.js";const A=JSON.parse('{"title":"使用Docker一键安装某些容器的脚本","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/docker/docker_custom.md","filePath":"guide/docker/docker_custom.md","lastUpdated":1746891349000}'),n={name:"guide/docker/docker_custom.md"},p=l(`<h1 id="使用docker一键安装某些容器的脚本" tabindex="-1">使用Docker一键安装某些容器的脚本 <a class="header-anchor" href="#使用docker一键安装某些容器的脚本" aria-label="Permalink to &quot;使用Docker一键安装某些容器的脚本&quot;">​</a></h1><p>每个容器都有对应的配置要求，自行查看，内存不够的用<a href="https://virt.spiritlhl.net/guide/docker_install.html#%E5%BC%80%E8%AE%BE%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98" target="_blank" rel="noreferrer">这个</a>开设虚拟内存补足也行</p><p>注意，以下脚本使用前务必使用本套教程中的环境安装脚本进行前期环境安装</p><h2 id="一键开设android系统的容器" tabindex="-1">一键开设Android系统的容器 <a class="header-anchor" href="#一键开设android系统的容器" aria-label="Permalink to &quot;一键开设Android系统的容器&quot;">​</a></h2><ul><li>自定义安卓版本</li><li>自动创建带校验的web网站</li><li>自动进行nginx安装和反向代理的配置，可选择是否绑定域名，默认回车不绑定使用80端口</li><li>无需考虑宿主机是否支持嵌套虚拟化</li><li>支持x86_64和ARM架构</li></ul><p><strong>宿主机的配置至少要有1核2G内存15G硬盘，否则开设可能会导致宿主机卡死</strong></p><p>宿主机推荐 Ubuntu 系统，Debian 系统可能导致安卓屏幕白屏</p><p>安卓版本越新占用越大，以上的配置要求是最低版本安卓的配置要求 (个人测试到 12.0.0-latest 的tag可用，更高版本映射白屏了，自己测试哪个能用吧)</p><p>如果开设后，过了5分钟浏览器网页的登录验证还是一直失败，那么请查询安卓容器的日志，大概率安卓容器崩溃了，建议更换更低的安卓系统版本的容器进行安装</p><p><strong>开设</strong></p><p>国际</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span></span></code></pre></div><p>国内</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create_android.sh</span></span></code></pre></div><p>命令执行后按照提示输入即可，注意选择版本输入的是序号，对应选项的数字序号，安装完毕后打开<code>本机IPV4+80端口</code>可登录</p><p>如果需要查询生成的安卓信息和web登录信息，执行<code>cat /root/android_info</code>可查询信息</p><p>默认的用户名 <code>onea</code></p><p>默认密码 <code>oneclick</code></p><p>远程的桌面点击<code>H264 Converter</code>跳转就是了</p><p><strong>暂时只支持生成一个安卓容器，勿要重复生成，如需替换版本请执行后续命令删除后再次开设</strong></p><p><strong>暂时只支持开设后一直使用，不可重启服务器，重启后可能无法自重启映射成功，自测</strong></p><p><strong>删除</strong></p><ul><li>删除容器</li><li>删除容器对应镜像</li><li>删除配置文件</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker rm -f android</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rmi $(docker images | grep &quot;redroid&quot; | awk &#39;{print $3}&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /etc/nginx/sites-enabled/reverse-proxy</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /etc/nginx/sites-available/reverse-proxy</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /etc/nginx/passwd_scrcpy_web</span></span>
<span class="line"><span style="color:#A6ACCD;">rm -rf /root/android_info</span></span></code></pre></div><h2 id="一键开设windows系统的容器" tabindex="-1">一键开设Windows系统的容器 <a class="header-anchor" href="#一键开设windows系统的容器" aria-label="Permalink to &quot;一键开设Windows系统的容器&quot;">​</a></h2><ul><li>共享宿主机所有资源(CPU、内存、硬盘)，基于docker所以只占用系统的大小，适合多开</li><li>共享IP，做了docker的NAT映射，可选择是否映射到外网或仅内网</li><li>设置的win系统默认最多占用为1核2G内存50G硬盘，实际占用看使用情况</li><li>无需iptables进行NAT映射，删除容器时自动删除了端口的映射，方便维护</li><li>需要考虑宿主机是否支持嵌套虚拟化，暂时只支持X86_64架构的系统</li></ul><p><strong>宿主机需要支持嵌套虚拟化，且暂时只支持X86_64架构的系统，手头没ARM机器编译对应的镜像</strong></p><p>执行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">egrep -c &#39;(vmx|svm)&#39; /proc/cpuinfo</span></span></code></pre></div><p>结果需要大于或等于1，不能为0</p><p>然后需要先设置docker切换使用v1版cgroup启动</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sed -i &#39;s/GRUB_CMDLINE_LINUX=&quot;\\(.*\\)&quot;/GRUB_CMDLINE_LINUX=&quot;\\1 systemd.unified_cgroup_hierarchy=0&quot;/&#39; /etc/default/grub</span></span>
<span class="line"><span style="color:#A6ACCD;">update-grub</span></span>
<span class="line"><span style="color:#A6ACCD;">ls</span></span></code></pre></div><p>如果执行都无报错，执行<code>reboot</code>重启系统以使得设置生效</p><p><strong>支持的镜像</strong></p><p>使用的自建的镜像：<a href="https://hub.docker.com/r/spiritlhl/wds" target="_blank" rel="noreferrer">https://hub.docker.com/r/spiritlhl/wds</a></p><table><thead><tr><th>镜像名字</th><th>镜像大小</th></tr></thead><tbody><tr><td>10</td><td>20G</td></tr><tr><td>2022</td><td>17.5G</td></tr><tr><td>2019</td><td>17G</td></tr></tbody></table><p>创建出的容器大小会比镜像大小大一丢丢，但不多</p><p><strong>下载脚本</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">curl -L https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onewindows.sh -o onewindows.sh &amp;&amp; chmod +x onewindows.sh</span></span></code></pre></div><p><strong>使用方法</strong></p><p>开设前务必在screen窗口中执行，避免SSH长期链接造成掉线卡死</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./onewindows.sh 容器名字 系统版本 RDP的端口 是否为外网映射(留空则默认是N，可选Y)</span></span></code></pre></div><p>开设前需要确认宿主机至少有镜像大小的两倍大小加10G硬盘的大小，因为docker在创建容器时得先将镜像拉到本地再创建</p><p>创建过程中，硬盘占用峰值为<code>宿主机系统+镜像大小+容器大小</code></p><p>比如开设容器名字为<code>test</code>，占用最低的<code>Windows 2019</code>系统的容器，映射外网RDP端口为<code>13389</code>，设置为<code>外网映射</code>(映射到你的服务器外网IPV4地址)</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">./onewindows.sh test 2019 13389 Y</span></span></code></pre></div><p>开设后默认的用户名是<code>Administrator</code>和<code>vagrant</code></p><p>默认的密码是<code>vagrant</code></p><p>如果你选择开设映射的外网端口，务必登录后修改对应账户的密码(两个账户都可能有，自行尝试)，否则可能被人爆破滥用</p><p><strong>删除</strong></p><p>需要删除对应镜像和容器，先执行<code>docker ps -a</code>和<code>docker images</code>查询镜像是<code>spiritlhl/wds</code>的ID，然后对应使用</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker rm -f 容器的ID</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rmi 镜像的ID</span></span></code></pre></div><p>删除后可开设别的版本的windows容器</p><p>(在宿主机上使用Docker安装Windows系统，好像绕过了某些商家不允许DD成Win系统的TOS限制)</p><p><strong>其他类似的项目</strong></p><p><a href="https://github.com/dockur/windows" target="_blank" rel="noreferrer">https://github.com/dockur/windows</a> - 同类项目，他支持的系统更多，但资源需求更多，同时开设过程中需要额外下载iso装载，docker容器本身只有脚本，安装缓慢</p><p><a href="https://github.com/dockur/windows-arm/" target="_blank" rel="noreferrer">https://github.com/dockur/windows-arm/</a> - 同类项目，他支持的系统更多，但资源需求更多，同时开设过程中需要额外下载iso装载，docker容器本身只有脚本，安装缓慢</p><p>注意，上述的两个项目都要求宿主机的CPU至少4核，内存至少4G，硬盘至少64G，比我的项目的镜像需求要求更大。(他的项目优点是可以自定义很多配置项，详见他对应的项目说明。)</p><h2 id="一键开设firefox浏览器的容器" tabindex="-1">一键开设Firefox浏览器的容器 <a class="header-anchor" href="#一键开设firefox浏览器的容器" aria-label="Permalink to &quot;一键开设Firefox浏览器的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>已设置带中文字体</li><li>自带web的校验，可自设置密码</li><li>可自定义容器最大的内存占用</li><li>可选是否开启VNC端口，默认不开启</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>不支持声音映射，无论是WEB端还是VNC端都无法传输声音</li></ul><p><strong>宿主机需要至少1核2G内存5G硬盘，开设的容器大小将占用起码1G硬盘</strong></p><p><strong>开设</strong></p><p>如果未设置自定义密码，开设后默认的密码是<code>oneclick</code>。</p><p>默认的web端口是<code>3003</code>，开设后打开<code>本机IPV4:端口</code>即可</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onefirefox.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onefirefox.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onefirefox.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onefirefox.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>修改以下端口号<code>3003</code>为你实际的端口号，然后执行命令回车两次即可删除容器、配置文件、对应镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3003</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firefox_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firefox_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/bin/firefox_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jlesage/firefox</span></span></code></pre></div><h2 id="一键开设chrome浏览器的容器" tabindex="-1">一键开设Chrome浏览器的容器 <a class="header-anchor" href="#一键开设chrome浏览器的容器" aria-label="Permalink to &quot;一键开设Chrome浏览器的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>自带web的校验，可自设置密码</li><li>可自定义容器最大的内存占用</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>支持声音映射</li></ul><p><strong>宿主机需要至少1核2G内存10G硬盘，开设的容器大小将占用起码1G硬盘</strong></p><p><strong>首次安装过程中最好在screen中挂起执行，避免长时间运行SSH连接断开</strong></p><p><strong>开设</strong></p><p>如果未设置自定义用户名，开设后默认的用户名是<code>oneclick</code>。</p><p>如果未设置自定义密码，开设后默认的密码是<code>oneclick</code>。</p><p>默认的http端口是<code>3004</code>，开设后打开<code>http://本机IPV4:端口</code>即可</p><p>默认的https端口是<code>3005</code>，开设后打开<code>https://本机IPV4:端口</code>即可</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onechromium.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onechromium.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onechromium.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onechromium.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>修改以下端口号<code>3004</code>为你实际的http端口号，然后执行命令回车两次即可删除容器、配置文件、对应镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3004</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">chromium_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">chromium_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/bin/config_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/bin/password_</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">PORT</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lscr.io/linuxserver/chromium</span></span></code></pre></div><p><strong>注意事项</strong></p><ul><li>nginx，caddy等https映射的时候要映射3004的端口，不要映射3005端口</li><li>部署以后安静的等待15分钟，不然中文库没安装全，会出现不可预料的错误</li><li>进入远程桌面浏览器以后点击左侧的设置-&gt;点开输入法进行设置，不然没法输入中文</li></ul><p><img src="https://github.com/user-attachments/assets/b433d9e3-bd79-413c-8c97-15b29a4c1058" alt="图片"></p><h2 id="一键开设desktop的容器" tabindex="-1">一键开设Desktop的容器 <a class="header-anchor" href="#一键开设desktop的容器" aria-label="Permalink to &quot;一键开设Desktop的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>已设置带中文字体</li><li>自带web的校验，可自设置用户名和密码</li><li>可自定义容器最大的内存占用</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>支持声音映射，WEB端可传输声音</li></ul><p>完整的Linux桌面，可以在上面使用浏览器</p><p><strong>宿主机需要至少1核2G内存5G硬盘，开设的容器大小将占用起码3.2G硬盘</strong></p><p><strong>开设</strong></p><p>开设后默认的用户名是<code>onew</code>，密码是<code>oneclick</code>，默认的内存最大占用是2GB</p><p>默认的http协议的web端口是<code>3004</code>，默认的https协议的web端口是<code>3005</code>，开设后打开对应协议的<code>本机IPV4:端口</code>即可</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onewebtop.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onewebtop.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onewebtop.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onewebtop.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>执行</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span></code></pre></div><p>查询name的前缀是webtop的容器，记录容器的ID用</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器的ID</span></span></code></pre></div><p>删除所有关联的容器后可用</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lscr.io/linuxserver/webtop</span></span></code></pre></div><p>删除对应镜像</p><h2 id="一键安装guacamole" tabindex="-1">一键安装guacamole <a class="header-anchor" href="#一键安装guacamole" aria-label="Permalink to &quot;一键安装guacamole&quot;">​</a></h2><p>一个网页端连接SSH或RDP等协议控制服务器的玩意</p><p>网址：<code>http://你的IPV4地址:80/guacamole</code></p><p>默认用户： <code>guacadmin</code></p><p>默认密码： <code>guacadmin</code></p><p>安装完毕登录后自行修改</p><p><strong>宿主机的配置至少要有1核2G内存10G硬盘，否则开设可能会导致宿主机卡死！</strong></p><p>国际</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/oneclickvirt/docker/main/extra_scripts/guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span></span></code></pre></div><p>国内</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/docker/main/extra_scripts/guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">guacamole.sh</span></span></code></pre></div><h2 id="一键开设rustdesk的容器" tabindex="-1">一键开设RustDesk的容器 <a class="header-anchor" href="#一键开设rustdesk的容器" aria-label="Permalink to &quot;一键开设RustDesk的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>传输质量看你的服务器和各端之间的连通性和延迟</li></ul><p>一个跨端的远控中继端(非客户端)，支持双向控制</p><p><strong>宿主机需要至少1核1G内存10G硬盘，对带宽的需求极低</strong></p><p><strong>开设</strong></p><p>安装后客户端在这里找 <a href="https://github.com/rustdesk/rustdesk/releases/latest" target="_blank" rel="noreferrer">https://github.com/rustdesk/rustdesk/releases/latest</a></p><p>在设置中设置中继服务器的IP即可，支持 Android、Windows、Linux、浏览器 端，支持电脑远控手机</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-L</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onerustdesk.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onerustdesk.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onerustdesk.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">onerustdesk.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>删除容器</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hbbs</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hbbr</span></span></code></pre></div><p>删除对应镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rustdesk/rustdesk-server</span></span></code></pre></div>`,124),e=[p];function t(c,r,i,C,d,y){return a(),o("div",null,e)}const h=s(n,[["render",t]]);export{A as __pageData,h as default};

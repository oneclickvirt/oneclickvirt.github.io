import{_ as i,c as a,o as t,ag as h}from"./chunks/framework.CSeR4K32.js";const c=JSON.parse('{"title":"使用Docker一键安装某些容器的脚本","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/docker/docker_custom.md","filePath":"guide/docker/docker_custom.md","lastUpdated":1760843733000}'),e={name:"guide/docker/docker_custom.md"};function l(p,s,n,k,r,d){return t(),a("div",null,s[0]||(s[0]=[h(`<h1 id="使用docker一键安装某些容器的脚本" tabindex="-1">使用Docker一键安装某些容器的脚本 <a class="header-anchor" href="#使用docker一键安装某些容器的脚本" aria-label="Permalink to &quot;使用Docker一键安装某些容器的脚本&quot;">​</a></h1><p>每个容器都有对应的配置要求，自行查看，内存不够的用<a href="https://github.com/spiritLHLS/addswap" target="_blank" rel="noreferrer">https://github.com/spiritLHLS/addswap</a>的</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/spiritLHLS/addswap/main/addswap.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span></span></code></pre></div><p>开设虚拟内存补足也行</p><p>注意，以下脚本使用前务必使用本套教程中的环境安装脚本进行前期环境安装</p><h2 id="一键开设firefox浏览器的容器" tabindex="-1">一键开设Firefox浏览器的容器 <a class="header-anchor" href="#一键开设firefox浏览器的容器" aria-label="Permalink to &quot;一键开设Firefox浏览器的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>已设置带中文字体</li><li>自带web的校验，可自设置密码</li><li>可自定义容器最大的内存占用</li><li>可选是否开启VNC端口，默认不开启</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>不支持声音映射，无论是WEB端还是VNC端都无法传输声音</li></ul><p><strong>宿主机需要至少1核2G内存5G硬盘，开设的容器大小将占用起码1G硬盘</strong></p><p><strong>开设</strong></p><p>如果未设置自定义密码，开设后默认的密码是<code>oneclick</code>。</p><p>默认的web端口是<code>3003</code>，开设后打开<code>本机IPV4:端口</code>即可</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onefirefox.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onefirefox.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onefirefox.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onefirefox.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>修改以下端口号<code>3003</code>为你实际的端口号，然后执行命令回车两次即可删除容器、配置文件、对应镜像</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3003&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firefox_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> firefox_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/firefox_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jlesage/firefox</span></span></code></pre></div><h2 id="一键开设chrome浏览器的容器" tabindex="-1">一键开设Chrome浏览器的容器 <a class="header-anchor" href="#一键开设chrome浏览器的容器" aria-label="Permalink to &quot;一键开设Chrome浏览器的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>自带web的校验，可自设置密码</li><li>可自定义容器最大的内存占用</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>支持声音映射</li></ul><p><strong>宿主机需要至少1核2G内存10G硬盘，开设的容器大小将占用起码1G硬盘</strong></p><p><strong>首次安装过程中最好在screen中挂起执行，避免长时间运行SSH连接断开</strong></p><p><strong>开设</strong></p><p>如果未设置自定义用户名，开设后默认的用户名是<code>oneclick</code>。</p><p>如果未设置自定义密码，开设后默认的密码是<code>oneclick</code>。</p><p>默认的http端口是<code>3004</code>，开设后打开<code>http://本机IPV4:端口</code>即可</p><p>默认的https端口是<code>3005</code>，开设后打开<code>https://本机IPV4:端口</code>即可</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onechromium.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onechromium.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onechromium.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onechromium.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>修改以下端口号<code>3004</code>为你实际的http端口号，然后执行命令回车两次即可删除容器、配置文件、对应镜像</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3004&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chromium_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chromium_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/config_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/password_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PORT}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lscr.io/linuxserver/chromium</span></span></code></pre></div><p><strong>注意事项</strong></p><ul><li>nginx，caddy等https映射的时候要映射3004的端口，不要映射3005端口</li><li>部署以后安静的等待15分钟，不然中文库没安装全，会出现不可预料的错误</li><li>进入远程桌面浏览器以后点击左侧的设置-&gt;点开输入法进行设置，不然没法输入中文</li></ul><p><img src="https://github.com/user-attachments/assets/b433d9e3-bd79-413c-8c97-15b29a4c1058" alt="图片"></p><h2 id="一键开设desktop的容器" tabindex="-1">一键开设Desktop的容器 <a class="header-anchor" href="#一键开设desktop的容器" aria-label="Permalink to &quot;一键开设Desktop的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>已设置带中文字体</li><li>自带web的校验，可自设置用户名和密码</li><li>可自定义容器最大的内存占用</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>支持声音映射，WEB端可传输声音</li></ul><p>完整的Linux桌面，可以在上面使用浏览器</p><p><strong>宿主机需要至少1核2G内存5G硬盘，开设的容器大小将占用起码3.2G硬盘</strong></p><p><strong>开设</strong></p><p>开设后默认的用户名是<code>onew</code>，密码是<code>oneclick</code>，默认的内存最大占用是2GB</p><p>默认的http协议的web端口是<code>3004</code>，默认的https协议的web端口是<code>3005</code>，开设后打开对应协议的<code>本机IPV4:端口</code>即可</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onewebtop.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onewebtop.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onewebtop.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onewebtop.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><p>查询name的前缀是webtop的容器，记录容器的ID用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 容器的ID</span></span></code></pre></div><p>删除所有关联的容器后可用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lscr.io/linuxserver/webtop</span></span></code></pre></div><p>删除对应镜像</p><h2 id="一键安装guacamole" tabindex="-1">一键安装guacamole <a class="header-anchor" href="#一键安装guacamole" aria-label="Permalink to &quot;一键安装guacamole&quot;">​</a></h2><p>一个网页端连接SSH或RDP等协议控制服务器的玩意</p><p>网址：<code>http://你的IPV4地址:80/guacamole</code></p><p>默认用户： <code>guacadmin</code></p><p>默认密码： <code>guacadmin</code></p><p>安装完毕登录后自行修改</p><p><strong>宿主机的配置至少要有1核2G内存10G硬盘，否则开设可能会导致宿主机卡死！</strong></p><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/docker/main/extra_scripts/guacamole.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guacamole.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guacamole.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guacamole.sh</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/docker/main/extra_scripts/guacamole.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guacamole.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guacamole.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guacamole.sh</span></span></code></pre></div><h2 id="一键开设rustdesk的容器" tabindex="-1">一键开设RustDesk的容器 <a class="header-anchor" href="#一键开设rustdesk的容器" aria-label="Permalink to &quot;一键开设RustDesk的容器&quot;">​</a></h2><ul><li>已设置崩溃自启</li><li>无需考虑是否支持嵌套虚拟化和服务器的架构</li><li>传输质量看你的服务器和各端之间的连通性和延迟</li></ul><p>一个跨端的远控中继端(非客户端)，支持双向控制</p><p><strong>宿主机需要至少1核1G内存10G硬盘，对带宽的需求极低</strong></p><p><strong>开设</strong></p><p>安装后客户端在这里找 <a href="https://github.com/rustdesk/rustdesk/releases/latest" target="_blank" rel="noreferrer">https://github.com/rustdesk/rustdesk/releases/latest</a></p><p>在设置中设置中继服务器的IP即可，支持 Android、Windows、Linux、浏览器 端，支持电脑远控手机</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/docker/main/scripts/onerustdesk.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onerustdesk.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onerustdesk.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> onerustdesk.sh</span></span></code></pre></div><p><strong>删除</strong></p><p>删除容器</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hbbs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hbbr</span></span></code></pre></div><p>删除对应镜像</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rustdesk/rustdesk-server</span></span></code></pre></div>`,71)]))}const F=i(e,[["render",l]]);export{c as __pageData,F as default};

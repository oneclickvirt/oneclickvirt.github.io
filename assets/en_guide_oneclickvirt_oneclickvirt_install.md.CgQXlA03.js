import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.CSeR4K32.js";const n="/assets/proxy.Dm-mUL3T.png",l="/assets/init.CCPKl32d.png",p="/assets/init_success.DAbHwjWK.png",h="/assets/home.BlmfOIEU.png",u=JSON.parse('{"title":"OneClickVirt","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/guide/oneclickvirt/oneclickvirt_install.md","filePath":"en/guide/oneclickvirt/oneclickvirt_install.md","lastUpdated":1761269824000}'),o={name:"en/guide/oneclickvirt/oneclickvirt_install.md"};function r(d,i,k,c,g,F){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="oneclickvirt" tabindex="-1">OneClickVirt <a class="header-anchor" href="#oneclickvirt" aria-label="Permalink to &quot;OneClickVirt&quot;">​</a></h1><p>Distinguish between the panel side and the controlled side. The controlled side needs to have the corresponding virtualization environment installed in advance. You can use other sections of this documentation for environment installation. The control side is actually just a panel and has no virtualization environment requirements.</p><h2 id="controlled-side" tabindex="-1">Controlled Side <a class="header-anchor" href="#controlled-side" aria-label="Permalink to &quot;Controlled Side&quot;">​</a></h2><p>Refer to other sections of this documentation for environment installation. This will not be elaborated here. This tutorial provides corresponding installation commands for the four mainstream virtualization technologies. Please refer to them yourself.</p><p>If you need to use the panel&#39;s traffic control feature, you need to additionally install the <code>vnstat</code> tool. Download it yourself. If using apt package management, you can use</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vnstat</span></span></code></pre></div><p>to download it. The same applies to other systems.</p><p>The controlled side only needs to have the virtualization environment installed, and does not require additional agent installation for control. Just ensure that SSH login is available.</p><h2 id="panel-side" tabindex="-1">Panel Side <a class="header-anchor" href="#panel-side" aria-label="Permalink to &quot;Panel Side&quot;">​</a></h2><p>Hardware requirements include at least 1G of free memory and 2G of free disk space. Installation can be completed using any of the methods below.</p><table tabindex="0"><thead><tr><th>Installation Method</th><th>Application Scenario</th><th>Advantages</th><th>Disadvantages</th></tr></thead><tbody><tr><td>Docker Deployment (Pre-built Image)</td><td>Quick deployment, larger footprint</td><td>One-click installation, data persistence</td><td>Requires Docker environment, large image download</td></tr><tr><td>Separate Front-end and Back-end Deployment</td><td>High performance, minimal footprint</td><td>Best performance, flexible configuration</td><td>Complex configuration, requires reverse proxy setup</td></tr><tr><td>Integrated Deployment</td><td>Works with or without public IPv4 address</td><td>Simple deployment, no reverse proxy needed</td><td>Poor performance</td></tr><tr><td>Dockerfile Self-compilation</td><td>Suitable for secondary development and source code release</td><td>Highly customizable</td><td>Requires Docker environment, long compilation time</td></tr></tbody></table><h3 id="installation-via-docker" tabindex="-1">Installation via Docker <a class="header-anchor" href="#installation-via-docker" aria-label="Permalink to &quot;Installation via Docker&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Since the database starts together with the container, do not operate immediately after the container starts. Wait at least 12 seconds.</p></div><p>Available image tags can be queried at:</p><p><a href="https://hub.docker.com/r/spiritlhl/oneclickvirt" target="_blank" rel="noreferrer">https://hub.docker.com/r/spiritlhl/oneclickvirt</a></p><p><a href="https://github.com/oneclickvirt/oneclickvirt/pkgs/container/oneclickvirt" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/pkgs/container/oneclickvirt</a></p><h4 id="method-1-deploy-using-pre-built-image" tabindex="-1">Method 1: Deploy Using Pre-built Image <a class="header-anchor" href="#method-1-deploy-using-pre-built-image" aria-label="Permalink to &quot;Method 1: Deploy Using Pre-built Image&quot;">​</a></h4><p><strong>Image Tag Description</strong></p><table tabindex="0"><thead><tr><th>Image Tag</th><th>Description</th><th>Application Scenario</th></tr></thead><tbody><tr><td><code>spiritlhl/oneclickvirt:latest</code></td><td>Integrated version (built-in database) latest</td><td>Quick deployment</td></tr><tr><td><code>spiritlhl/oneclickvirt:20251023</code></td><td>Integrated version specific date</td><td>Requires fixed version</td></tr><tr><td><code>spiritlhl/oneclickvirt:no-db</code></td><td>Separate database version latest</td><td>Without built-in database</td></tr><tr><td><code>spiritlhl/oneclickvirt:no-db-20251023</code></td><td>Separate database version specific date</td><td>Without built-in database</td></tr></tbody></table><p>All images support both <code>linux/amd64</code> and <code>linux/arm64</code> architectures.</p><h5 id="deploy-in-fresh-environment" tabindex="-1">Deploy in Fresh Environment <a class="header-anchor" href="#deploy-in-fresh-environment" aria-label="Permalink to &quot;Deploy in Fresh Environment&quot;">​</a></h5><p>Use pre-built <code>amd64</code> or <code>arm64</code> images, which will automatically download the corresponding version based on the current system architecture:</p><p>Without domain configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>Configure domain access:</p><p>If you need to configure a domain, set the <code>FRONTEND_URL</code> environment variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FRONTEND_URL=&quot;https://your-domain.com&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>The above methods are only for new installations.</p><h5 id="upgrade-only-front-end-and-back-end-in-existing-environment" tabindex="-1">Upgrade Only Front-end and Back-end in Existing Environment <a class="header-anchor" href="#upgrade-only-front-end-and-back-end-in-existing-environment" aria-label="Permalink to &quot;Upgrade Only Front-end and Back-end in Existing Environment&quot;">​</a></h5><p>First backup the configuration file to the current path:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt:/app/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>Delete only the container without removing the mounted volumes:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>Then delete the original image:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>Pull the container image again:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>Then follow the steps for deployment in a fresh environment. Note that after waiting 12 seconds and opening the front-end, you will find it automatically skips the initialization interface because the data has been persisted and imported.</p><p>Then overwrite the original configuration file:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt:/app/config.yaml</span></span></code></pre></div><h5 id="redeploy-in-existing-environment" tabindex="-1">Redeploy in Existing Environment <a class="header-anchor" href="#redeploy-in-existing-environment" aria-label="Permalink to &quot;Redeploy in Existing Environment&quot;">​</a></h5><p>This will completely delete the original data before redeployment. You need to delete not only the container but also the corresponding mount points:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-config</span></span></code></pre></div><p>Then delete the original image:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>Pull the container image again:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>Then follow the steps for deployment in a fresh environment. This will prompt for reinitialization, as all original data has been deleted.</p><h4 id="method-2-self-compile-and-deploy-via-dockerfile" tabindex="-1">Method 2: Self-compile and Deploy via Dockerfile <a class="header-anchor" href="#method-2-self-compile-and-deploy-via-dockerfile" aria-label="Permalink to &quot;Method 2: Self-compile and Deploy via Dockerfile&quot;">​</a></h4><p>This method is suitable for self-modifying source code and custom builds:</p><h5 id="integrated-version-built-in-database" tabindex="-1">Integrated Version (Built-in Database) <a class="header-anchor" href="#integrated-version-built-in-database" aria-label="Permalink to &quot;Integrated Version (Built-in Database)&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/oneclickvirt/oneclickvirt.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  oneclickvirt</span></span></code></pre></div><h5 id="separate-database-version-without-built-in-database" tabindex="-1">Separate Database Version (Without Built-in Database) <a class="header-anchor" href="#separate-database-version-without-built-in-database" aria-label="Permalink to &quot;Separate Database Version (Without Built-in Database)&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/oneclickvirt/oneclickvirt.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Dockerfile.no-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt:no-db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FRONTEND_URL=&quot;https://your-domain.com&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_HOST=&quot;your-mysql-host&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_PORT=&quot;3306&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_NAME=&quot;oneclickvirt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_USER=&quot;root&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_PASSWORD=&quot;your-password&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  oneclickvirt:no-db</span></span></code></pre></div><h3 id="installation-via-pre-compiled-binary-files" tabindex="-1">Installation via Pre-compiled Binary Files <a class="header-anchor" href="#installation-via-pre-compiled-binary-files" aria-label="Permalink to &quot;Installation via Pre-compiled Binary Files&quot;">​</a></h3><p>There are also two methods here:</p><ul><li>Frontend-backend separation deployment (backend and frontend are compiled separately into corresponding files for deployment), better performance</li><li>All-in-one deployment (frontend and backend are integrated into one file for deployment), lower performance</li></ul><h4 id="frontend-backend-separation-deployment" tabindex="-1">Frontend-Backend Separation Deployment <a class="header-anchor" href="#frontend-backend-separation-deployment" aria-label="Permalink to &quot;Frontend-Backend Separation Deployment&quot;">​</a></h4><h5 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h5><p>Download and execute</p><p>International:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span></span></code></pre></div><p>Domestic:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span></span></code></pre></div><p>Interactive environment installation:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./install.sh</span></span></code></pre></div><p>Non-interactive environment installation:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>noninteractive=true ./install.sh</span></span></code></pre></div><p>Installation directory: <code>/opt/oneclickvirt</code></p><p>After successful installation, you need to manually start the service:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>Other usage methods:</p><p>Stop service:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>Enable auto-start on boot:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>Check status:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>View logs:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><p>Restart service:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>The installation script will extract static files to:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/oneclickvirt/web/</span></span></code></pre></div><p>this path.</p><p>Use <code>nginx</code> or <code>caddy</code> to establish a static website with this path. Whether to bind a domain name is your choice.</p><p>After deploying the static files, you need to reverse proxy the backend address for frontend use. Here&#39;s a specific example using <code>OpenResty</code>:</p><p><img src="`+n+`" alt=""></p><p>You need to reverse proxy the path <code>/api</code> to the backend address <code>http://127.0.0.1:8888</code>. If you&#39;re using <code>1panel</code>, you only need to fill in these fields, and the default backend domain uses the default <code>$host</code> without modification.</p><p>If you&#39;re using <code>nginx</code> or <code>caddy</code>, please refer to the proxy source code below and modify it for your own proxy setup:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:8888</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $host; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_addr; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-For</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE-HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_addr; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $http_upgrade; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $http_connection; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-Proto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $scheme; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $server_port; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_http_version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $upstream_cache_status; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Cache-Control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no-cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_ssl_server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_ssl_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $proxy_host; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h5><p>Check:</p><p><a href="https://github.com/oneclickvirt/oneclickvirt/releases/latest" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/releases/latest</a></p><p>Download the latest compressed file for the corresponding architecture, extract and execute.</p><p>In the same directory as the executing binary file, download:</p><p><a href="https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/server/config.yaml" target="_blank" rel="noreferrer">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/server/config.yaml</a></p><p>This is the configuration file needed for subsequent use.</p><p>After downloading the <code>web-dist.zip</code> file, extract it and use the corresponding program to establish a static website, setting up the reverse proxy similar to Linux.</p><h4 id="all-in-one-deployment" tabindex="-1">All-in-One Deployment <a class="header-anchor" href="#all-in-one-deployment" aria-label="Permalink to &quot;All-in-One Deployment&quot;">​</a></h4><p>Here we no longer distinguish between frontend and backend concepts. From:</p><p><a href="https://github.com/oneclickvirt/oneclickvirt/releases/latest" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/releases/latest</a></p><p>Find the compressed package with the <code>allinone</code> tag to download. Note the distinction between <code>amd64</code> and <code>arm64</code> architectures, as well as the corresponding systems.</p><p>In Linux, use the <code>tar -zxvf</code> command to extract the <code>tar.gz</code> compressed package. In Windows, use the corresponding extraction tool to extract the <code>zip</code> compressed package, and copy the binary file to the location where you need to deploy the project.</p><p>It&#39;s best to move it to a dedicated folder, as structured log files will be generated during operation.</p><p>(The following instructions will use the amd64 architecture Linux system file as an example)</p><p>In Linux, grant executable permissions to the file, such as:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server-allinone-linux-amd64</span></span></code></pre></div><p>Then download:</p><p><a href="https://github.com/oneclickvirt/oneclickvirt/blob/main/server/config.yaml" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/blob/main/server/config.yaml</a></p><p>to the same folder.</p><p>In Linux, use <code>screen</code> or <code>tmux</code> or <code>nohup</code> commands to execute the binary file in the background, such as:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./server-allinone-linux-amd64</span></span></code></pre></div><p>Then open port 8888 of the corresponding IP address to see the frontend for use, such as:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://your-IP-address:8888</span></span></code></pre></div><p>If you&#39;re on a Windows system, you need to start the exe file with administrator privileges, and ensure that the <code>config.yaml</code> configuration file exists in the same folder as the exe file before starting, otherwise startup will result in a white screen or connection issues. As for how to execute it in the background, explore on your own. You can also directly run it with the cmd window open.</p><p>The all-in-one deployment mode is suitable for situations where the local machine doesn&#39;t have a public IP. Your IP address can be <code>localhost</code> or <code>127.0.0.1</code>, or it can be the corresponding public IPv4 address. Test in your specific deployment environment.</p><h2 id="database-initialization" tabindex="-1">Database Initialization <a class="header-anchor" href="#database-initialization" aria-label="Permalink to &quot;Database Initialization&quot;">​</a></h2><p>After installing and starting <code>mysql</code>, create an empty database <code>oneclickvirt</code>, using type <code>utf8mb4</code>, preferably accessible only locally via <code>127.0.0.1</code>. Save the corresponding username and password. (If you&#39;re using the all-in-one Docker deployment container, the database is included and you don&#39;t need to create an empty database yourself. By default, the corresponding database has already been started in the container and is available.)</p><p>After opening the corresponding frontend page, it will automatically redirect to the initialization interface.</p><p><img src="`+l+'" alt=""></p><p>Fill in the database information and related user information. Test the database connection, and if there are no issues, you can click to initialize the system.</p><p><img src="'+p+'" alt=""></p><p>After completing initialization, it will automatically redirect to the homepage, where you can explore and use it on your own.</p><p><img src="'+h+'" alt=""></p><p>If you used the default user information for initialization, the default account is:</p><p>Administrator account username and password are:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>admin</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Admin123!@#</span></span></code></pre></div><p>During initialization, all image seed data is loaded into the database by default, but by default only <code>debian</code> and <code>alpine</code> related version images are enabled. This is to avoid user choice paralysis caused by too many enabled images.</p><p>If you need additional types of images, you need to search and enable them by type, architecture, and version in the system image management interface under administrator privileges.</p><p>Please immediately change the default administrator username and password after initialization, and disable or delete the default enabled test user. This can be done in the administrator&#39;s user management page.</p>',132)]))}const C=s(o,[["render",r]]);export{u as __pageData,C as default};

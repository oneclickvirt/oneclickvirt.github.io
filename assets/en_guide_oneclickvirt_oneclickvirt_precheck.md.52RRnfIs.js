import{_ as t,c as r,o as i,ag as o}from"./chunks/framework.CSeR4K32.js";const f=JSON.parse('{"title":"Preface","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/guide/oneclickvirt/oneclickvirt_precheck.md","filePath":"en/guide/oneclickvirt/oneclickvirt_precheck.md","lastUpdated":1758815464000}'),n={name:"en/guide/oneclickvirt/oneclickvirt_precheck.md"};function a(c,e,s,l,p,d){return i(),r("div",null,e[0]||(e[0]=[o('<h1 id="preface" tabindex="-1">Preface <a class="header-anchor" href="#preface" aria-label="Permalink to &quot;Preface&quot;">​</a></h1><p>Welcome to give the project a <code>Star</code> for free support --&gt; <a href="https://github.com/oneclickvirt/oneclickvirt" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt</a></p><h2 id="environment-requirements" tabindex="-1">Environment Requirements <a class="header-anchor" href="#environment-requirements" aria-label="Permalink to &quot;Environment Requirements&quot;">​</a></h2><p>Supported architectures: amd64 or arm64</p><p>Supported systems: Linux, Windows</p><p>As long as there is public network access, the deployed machine does not need to have a dedicated public IP address. This is only a virtualization control panel.</p><p>This control panel has no environmental dependency requirements, only a backend started as a daemon process and a corresponding frontend static file folder.</p><p>Frontend static files can be deployed through nginx or caddy.</p><h2 id="platform-features" tabindex="-1">Platform Features <a class="header-anchor" href="#platform-features" aria-label="Permalink to &quot;Platform Features&quot;">​</a></h2><ul><li><p>All code is open source, commercial use is not allowed</p></li><li><p>Supports connecting to Providers such as ProxmoxVE, Incus, Docker, LXD for virtualization, supporting the creation of virtual machines or containers</p></li><li><p>Supports automatic NAT public port mapping, flexible configuration of the Provider&#39;s network type, and creating virtual machines or containers with independent IPv6 addresses</p></li><li><p>Supports traffic monitoring, forces synchronization of traffic for sensitive operations, and resets traffic usage uniformly at the beginning of the month</p></li><li><p>Supports invitation code registration instead of public registration, and user level management for setting resource limits</p></li></ul>',10)]))}const h=t(n,[["render",a]]);export{f as __pageData,h as default};

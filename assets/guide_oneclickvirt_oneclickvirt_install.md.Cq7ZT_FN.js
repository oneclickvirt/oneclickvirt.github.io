import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CSeR4K32.js";const l="/assets/proxy.Dm-mUL3T.png",n="/assets/init.CCPKl32d.png",p="/assets/init_success.DAbHwjWK.png",h="/assets/home.BlmfOIEU.png",y=JSON.parse('{"title":"OneClickVirt","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/oneclickvirt/oneclickvirt_install.md","filePath":"guide/oneclickvirt/oneclickvirt_install.md","lastUpdated":1761705878000}'),k={name:"guide/oneclickvirt/oneclickvirt_install.md"};function d(r,s,c,o,F,g){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="oneclickvirt" tabindex="-1">OneClickVirt <a class="header-anchor" href="#oneclickvirt" aria-label="Permalink to &quot;OneClickVirt&quot;">​</a></h1><p>区分面板端和受控端，受控端需要提前安装好对应虚拟化的环境，可使用本说明别的主体安装进行环境安装，主控端实际就是一个面板，没有虚拟化环境需求。</p><h2 id="受控端" tabindex="-1">受控端 <a class="header-anchor" href="#受控端" aria-label="Permalink to &quot;受控端&quot;">​</a></h2><p>对应本说明别的主体安装进行环境安装，这里不过多赘述，四大主流的虚拟化技术的主体安装本教程都有对应的安装命令进行安装，自行查阅。</p><p>如果需要使用面板的流量控制的话，需要额外安装<code>vnstat</code>这个工具，自行下载吧，如果是apt管理包，则可用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vnstat</span></span></code></pre></div><p>进行下载，其他系统同理。</p><p>受控端只需要安装好虚拟化环境即可，不必额外安装agent进行控制，只要确保SSH能登录即可。</p><h2 id="面板端" tabindex="-1">面板端 <a class="header-anchor" href="#面板端" aria-label="Permalink to &quot;面板端&quot;">​</a></h2><p>硬件上需要至少1G空闲内存和2G空闲硬盘，通过下面任一方式安装完成即可。</p><table tabindex="0"><thead><tr><th>安装方式</th><th>适用场景</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>Docker部署(预构建镜像)</td><td>快速部署，占用较大</td><td>一键安装、数据持久化</td><td>需要Docker环境，下载镜像较大</td></tr><tr><td>前后端分离部署</td><td>高性能，占用最小</td><td>性能最佳、灵活配置</td><td>配置复杂，需配置反向代理</td></tr><tr><td>一体化部署</td><td>本地有无公网IPV4地址皆可</td><td>部署简单、无需反向代理</td><td>性能较差</td></tr><tr><td>Dockerfile自编译</td><td>适合二次开发源码发布</td><td>高度自定义</td><td>需要Docker环境，编译耗时长</td></tr></tbody></table><h3 id="通过docker安装" tabindex="-1">通过Docker安装 <a class="header-anchor" href="#通过docker安装" aria-label="Permalink to &quot;通过Docker安装&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>由于启动的时候连带数据库一起启动，所以容器刚启动的时候不要立即操作，需要至少等待12秒。</p></div><p>可使用的镜像tag可在</p><p><a href="https://hub.docker.com/r/spiritlhl/oneclickvirt" target="_blank" rel="noreferrer">https://hub.docker.com/r/spiritlhl/oneclickvirt</a></p><p><a href="https://github.com/oneclickvirt/oneclickvirt/pkgs/container/oneclickvirt" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/pkgs/container/oneclickvirt</a></p><p>中查询</p><h4 id="方式一-使用预构建镜像部署" tabindex="-1">方式一：使用预构建镜像部署 <a class="header-anchor" href="#方式一-使用预构建镜像部署" aria-label="Permalink to &quot;方式一：使用预构建镜像部署&quot;">​</a></h4><p><strong>镜像标签说明</strong></p><table tabindex="0"><thead><tr><th>镜像标签</th><th>说明</th><th>适用场景</th></tr></thead><tbody><tr><td><code>spiritlhl/oneclickvirt:latest</code></td><td>一体化版本（内置数据库）最新版</td><td>快速部署</td></tr><tr><td><code>spiritlhl/oneclickvirt:20251029</code></td><td>一体化版本特定日期版本</td><td>需要固定版本</td></tr><tr><td><code>spiritlhl/oneclickvirt:no-db</code></td><td>独立数据库版本最新版</td><td>不内置数据库</td></tr><tr><td><code>spiritlhl/oneclickvirt:no-db-20251029</code></td><td>独立数据库版本特定日期</td><td>不内置数据库</td></tr></tbody></table><p>所有镜像均支持 <code>linux/amd64</code> 和 <code>linux/arm64</code> 架构。</p><h5 id="全新部署" tabindex="-1">全新部署 <a class="header-anchor" href="#全新部署" aria-label="Permalink to &quot;全新部署&quot;">​</a></h5><p>使用已构建好的<code>amd64</code>或<code>arm64</code>镜像，会自动根据当前系统架构下载对应版本：</p><p>不配置域名：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>配置域名访问：</p><p>如果你需要配置域名，需要设置 <code>FRONTEND_URL</code> 环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FRONTEND_URL=&quot;https://your-domain.com&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>以上的方式仅限于新安装</p><h5 id="旧环境下仅升级" tabindex="-1">旧环境下仅升级 <a class="header-anchor" href="#旧环境下仅升级" aria-label="Permalink to &quot;旧环境下仅升级&quot;">​</a></h5><p>先备份配置文件到当前路径下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt:/app/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>不需要删除挂载盘仅删除容器本身：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>然后删除原始的镜像：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>重新拉取容器镜像：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>然后再按全新环境下开设的步骤来，注意等待12秒后打开前端，会发现已自动越过初始化界面，因为数据已持久化导入。</p><p>然后覆写原有的配置文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt:/app/config.yaml</span></span></code></pre></div><h5 id="旧环境下新部署" tabindex="-1">旧环境下新部署 <a class="header-anchor" href="#旧环境下新部署" aria-label="Permalink to &quot;旧环境下新部署&quot;">​</a></h5><p>这将完全删除原有数据再部署，不仅需要删除容器还得删除对应的挂载点：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage</span></span></code></pre></div><p>然后删除原始的镜像：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>重新拉取容器镜像：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spiritlhl/oneclickvirt:latest</span></span></code></pre></div><p>然后再按全新环境下开设的步骤来，这样会提示重新初始化，所有原始数据已删除。</p><h4 id="方式二-通过dockerfile自行编译部署" tabindex="-1">方式二：通过Dockerfile自行编译部署 <a class="header-anchor" href="#方式二-通过dockerfile自行编译部署" aria-label="Permalink to &quot;方式二：通过Dockerfile自行编译部署&quot;">​</a></h4><p>这种方式适合自行修改源码与自定义构建：</p><h5 id="一体化版本-内置数据库" tabindex="-1">一体化版本（内置数据库） <a class="header-anchor" href="#一体化版本-内置数据库" aria-label="Permalink to &quot;一体化版本（内置数据库）&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/oneclickvirt/oneclickvirt.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-data:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  oneclickvirt</span></span></code></pre></div><h5 id="独立数据库版本-不内置数据库" tabindex="-1">独立数据库版本（不内置数据库） <a class="header-anchor" href="#独立数据库版本-不内置数据库" aria-label="Permalink to &quot;独立数据库版本（不内置数据库）&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/oneclickvirt/oneclickvirt.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Dockerfile.no-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt:no-db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FRONTEND_URL=&quot;https://your-domain.com&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_HOST=&quot;your-mysql-host&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_PORT=&quot;3306&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_NAME=&quot;oneclickvirt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_USER=&quot;root&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB_PASSWORD=&quot;your-password&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt-storage:/app/storage</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unless-stopped</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  oneclickvirt:no-db</span></span></code></pre></div><h3 id="通过预编译二进制文件安装" tabindex="-1">通过预编译二进制文件安装 <a class="header-anchor" href="#通过预编译二进制文件安装" aria-label="Permalink to &quot;通过预编译二进制文件安装&quot;">​</a></h3><p>这里也区分两种方式：</p><ul><li>前后端分离部署(后端前端分开编译出对应文件进行部署)，性能更好</li><li>一体化部署(前后端合二为一只需要部署一个文件)，性能较差</li></ul><h4 id="前后端分离部署" tabindex="-1">前后端分离部署 <a class="header-anchor" href="#前后端分离部署" aria-label="Permalink to &quot;前后端分离部署&quot;">​</a></h4><h5 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h5><p>下载并执行</p><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.sh</span></span></code></pre></div><p>有交互地安装环境</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./install.sh</span></span></code></pre></div><p>无交互地安装环境</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>noninteractive=true ./install.sh</span></span></code></pre></div><p>安装目录: <code>/opt/oneclickvirt</code></p><p>安装成功后，需要手动启动服务:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>其他使用方法：</p><p>停止服务:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>开机自启:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>查看状态:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>查看日志:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><p>重启服务：</p><p>停止服务:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oneclickvirt</span></span></code></pre></div><p>前面安装脚本会将静态文件解压到</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/oneclickvirt/web/</span></span></code></pre></div><p>这个路径下</p><p>使用<code>nginx</code>或<code>caddy</code>以这个路径建立静态网站即可，是否需要域名绑定自行选择</p><p>静态文件部署完毕后，需要反代后端地址给前端使用，这里具体以<code>OpenResty</code>为例：</p><p><img src="`+l+`" alt=""></p><p>需要反代路径<code>/api</code>到后端的<code>http://127.0.0.1:8888</code>地址上，如果你使用的的是<code>1panel</code>，那么就只需要填写这些即可，默认的后端域名使用默认的<code>$host</code>不需要修改。</p><p>如果你使用的是<code>nginx</code>或<code>caddy</code>，请参考下方的代理源码自行修改进行代理</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://127.0.0.1:8888</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $host; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_addr; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-For</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE-HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_addr; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $http_upgrade; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Connection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $http_connection; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-Proto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $scheme; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-Port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $server_port; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_http_version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $upstream_cache_status; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Cache-Control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no-cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_ssl_server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    proxy_ssl_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $proxy_host; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h5><p>查看</p><p><a href="https://github.com/oneclickvirt/oneclickvirt/releases/latest" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/releases/latest</a></p><p>下载最新的对应架构的压缩文件，解压后挂起执行。</p><p>执行的二进制文件的同级目录下，下载</p><p><a href="https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/server/config.yaml" target="_blank" rel="noreferrer">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/oneclickvirt/refs/heads/main/server/config.yaml</a></p><p>文件，这是后续需要使用的配置文件。</p><p>下载<code>web-dist.zip</code>文件后，解压并使用对应的程序建立静态网站，类似Linux那样设置好反向代理即可。</p><h4 id="一体化部署" tabindex="-1">一体化部署 <a class="header-anchor" href="#一体化部署" aria-label="Permalink to &quot;一体化部署&quot;">​</a></h4><p>这里不再区分前后端的概念，从</p><p><a href="https://github.com/oneclickvirt/oneclickvirt/releases/latest" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/releases/latest</a></p><p>中找到带<code>allinone</code>标签的压缩包进行下载，注意区分<code>amd64</code>和<code>arm64</code>架构，以及对应的系统。</p><p>Linux中使用<code>tar -zxvf</code>命令解压<code>tar.gz</code>压缩包，Windows中使用对应解压工具解压<code>zip</code>压缩包，将其中的二进制文件复制粘贴到你需要部署项目的位置。</p><p>最好移动到一个专门的文件夹中，因为运行过程中将产生结构化的日志文件。</p><p>(以下说明将以amd64架构的linux系统的文件进行示例)</p><p>Linux中赋予文件可执行权限，如</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server-allinone-linux-amd64</span></span></code></pre></div><p>然后下载</p><p><a href="https://github.com/oneclickvirt/oneclickvirt/blob/main/server/config.yaml" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt/blob/main/server/config.yaml</a></p><p>文件到同一个文件夹中。</p><p>Linux中，使用<code>screen</code>或<code>tmux</code>或<code>nohup</code>命令挂起执行二进制文件即可，如</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./server-allinone-linux-amd64</span></span></code></pre></div><p>然后打开对应的IP地址的8888端口即可看到前端进行使用了，如</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://你的IP地址:8888</span></span></code></pre></div><p>如果你是Windows系统，那么需要使用管理员权限启动exe文件，同时确保启动前exe文件同一个文件夹中存在<code>config.yaml</code>配置文件，否则启动将出现白屏或不通的情况。至于怎么挂起执行，自行探索吧，直接挂着cmd界面运行也行。</p><p>一体化部署的模式适合本机没有公网IP的情况，你的IP地址可以是<code>localhost</code>或者<code>127.0.0.1</code>，也可以是对应的公网IPV4地址，具体部署环境下自测。</p><h2 id="数据库初始化" tabindex="-1">数据库初始化 <a class="header-anchor" href="#数据库初始化" aria-label="Permalink to &quot;数据库初始化&quot;">​</a></h2><p>安装启动了<code>mysql</code>后，创建一个空的数据库<code>oneclickvirt</code>，使用类型<code>utf8mb4</code>，最好仅本地<code>127.0.0.1</code>可访问，对应用户名和密码保存好。(如果你安装使用的是docker一体化部署的容器，自带数据库无需自己创建空数据库，默认已在容器中启动了对应的数据库可用了)</p><p>打开前端对应的页面后，将自动跳转到初始化界面。</p><p><img src="`+n+'" alt=""></p><p>填写数据库信息和相关用户信息，测试数据库链接无问题，则可点击初始化系统。</p><p><img src="'+p+'" alt=""></p><p>完成初始化后会自动跳转到首页，可以自行探索并使用了。</p><p><img src="'+h+'" alt=""></p><p>如果使用的是默认的用户信息进行初始化，那么默认的账户为：</p><p>管理员账户名密码分别为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>admin</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Admin123!@#</span></span></code></pre></div><p>初始化过程中，默认加载了所有的镜像种子数据到数据库中，但是默认仅启用了<code>debian</code>和<code>alpine</code>相关版本的镜像，这是为了避免过多镜像启用导致用户选择困难。</p><p>如果你需要额外类型的镜像，需要在管理员权限下，在系统镜像管理界面按照类型、架构、版本搜索并进行启用。</p><p>初始化后请立即修改默认的管理员的用户名密码，并禁用或删除默认启用的测试用户，这一部分可在管理员的用户管理页面进行操作。</p>',134)]))}const u=i(k,[["render",d]]);export{y as __pageData,u as default};

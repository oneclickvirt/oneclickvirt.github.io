import{_ as a,c as i,o as p,ag as l}from"./chunks/framework.CSeR4K32.js";const v=JSON.parse('{"title":"前言","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/oneclickvirt/oneclickvirt_precheck.md","filePath":"guide/oneclickvirt/oneclickvirt_precheck.md","lastUpdated":1761983789000}'),n={name:"guide/oneclickvirt/oneclickvirt_precheck.md"};function t(c,e,s,o,r,d){return p(),i("div",null,e[0]||(e[0]=[l(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>这是一个用于对接主流虚拟化技术的控制面板，补足虚拟化技术本身不支持的用户管理、流量监控、NAT端口映射以及自定义系统镜像等内容。</p><p>欢迎给项目一个<code>Star</code>进行免费的支持--&gt;<a href="https://github.com/oneclickvirt/oneclickvirt" target="_blank" rel="noreferrer">https://github.com/oneclickvirt/oneclickvirt</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>这是一个处于早期开发的项目，可能有各种BUG和不稳定之处，若使用则自行斟酌风险，更新会比较频繁</p></div><h2 id="环境需求" tabindex="-1">环境需求 <a class="header-anchor" href="#环境需求" aria-label="Permalink to &quot;环境需求&quot;">​</a></h2><p>支持的架构：amd64或arm64</p><p>支持的系统：Linux、Windows</p><p>只要有公网就行，部署的机器不必有独立的公网IP地址，这只是一个虚拟化的控制面板，有端口显示前端就行。</p><p>本控制面板无环境依赖需求，仅一个守护进程启动的后端和一个对应的前端静态文件的文件夹。</p><p>前端静态文件通过<code>nginx</code>或<code>caddy</code>或<code>OpenResty</code>之一部署即可，非源码部署且非Docker部署的需要进行API路径反代到后端端口。</p><h2 id="平台特点" tabindex="-1">平台特点 <a class="header-anchor" href="#平台特点" aria-label="Permalink to &quot;平台特点&quot;">​</a></h2><ul><li><p>对接国际化，前端支持中英双语切换显示，默认使用中文显示</p></li><li><p>对接Provider: 支持 ProxmoxVE、Incus、Docker、LXD 四大主流虚拟化平台</p></li><li><p>灵活实例类型: 支持创建虚拟机(VM)和容器(Container)，通过抽象化设计提供统一的虚拟化资源管理体验</p></li><li><p>自带镜像种子数据，无需自行查找对应平台的镜像，所有平台均自带自编译的镜像加载，支持统一管理</p></li><li><p>自动NAT端口映射: 支持IPv4/IPv6的自动端口映射，多种网络类型:</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NAT IPv4</span></span>
<span class="line"><span>NAT IPv4 + 独立IPv6</span></span>
<span class="line"><span>独立IPv4</span></span>
<span class="line"><span>独立IPv4 + IPv6</span></span>
<span class="line"><span>纯IPv6</span></span></code></pre></div><ul><li><p>灵活端口映射方式: 根据不同Provider自动选择最佳映射方案(原生、设备代理、iptables等)</p></li><li><p>集成vnStat进行精确的网络流量统计, 敏感操作时强制同步流量数据，确保数据准确性，</p></li><li><p>每月初统一重置用户流量使用统计，支持用户级、实例级、Provider级的流量统计和限制</p></li><li><p>支持邀请码系统，实现非公开注册机制，根据用户等级设置不同的资源配额限制</p></li><li><p>支持多种资源限制，实例数量/CPU/内存/磁盘/带宽配额管理，流量使用限制</p></li><li><p>所有代码开源，但不可进行商用</p></li></ul>`,14)]))}const u=a(n,[["render",t]]);export{v as __pageData,u as default};

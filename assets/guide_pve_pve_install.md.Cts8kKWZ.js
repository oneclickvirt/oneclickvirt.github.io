import{_ as i,c as e,o as a,ag as t}from"./chunks/framework.CSeR4K32.js";const k=JSON.parse('{"title":"PVE主体安装","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/pve/pve_install.md","filePath":"guide/pve/pve_install.md","lastUpdated":1755493193000}'),l={name:"guide/pve/pve_install.md"};function p(h,s,n,r,o,c){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="pve主体安装" tabindex="-1">PVE主体安装 <a class="header-anchor" href="#pve主体安装" aria-label="Permalink to &quot;PVE主体安装&quot;">​</a></h1><p>安装过程中遇到选项不会选的可无脑按回车，本项目所有脚本内置国内外IP自动判断，使用的是不同的安装源与配置文件，有使用CDN加速镜像下载</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>低配置的宿主机，建议所有内容安装完毕后，查看<code>自定义</code>分区的内容，进行内存调优，减少内存占用。</p></div><h2 id="在非物理机器上进行安装" tabindex="-1">在非物理机器上进行安装 <a class="header-anchor" href="#在非物理机器上进行安装" aria-label="Permalink to &quot;在非物理机器上进行安装&quot;">​</a></h2><p>本方法安装的Proxmox可后续使用本项目的所有脚本。</p><h3 id="一键安装pve" tabindex="-1">一键安装PVE <a class="header-anchor" href="#一键安装pve" aria-label="Permalink to &quot;一键安装PVE&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>建议debian12+，实测部分独立服务器的debian11系统会出现一重启网络就失联的情况，debian12没有这种问题</p></div><ul><li>安装的是当下apt源最新的PVE</li><li>比如debian10则是pve6.4，debian11则是pve7.x，debian12则是pve8.x，debian13则是pve9.x</li><li><code>/etc/hosts</code>文件修改(修正商家hostname设置错误以及新增PVE所需的内容)</li><li><code>/etc/cloud/cloud.cfg</code>文件修改(避免覆写已修改的hostname等配置)</li><li><code>/etc/network/interfaces</code>文件修改(修复auto、dhcp类型为static、增加vmbr0网关)</li><li>检测是否为中国IP，如果为中国IP使用清华镜像源，否则使用官方源，同时处理apt的源和对应的nameserver，避免断网</li><li>创建vmbr0(独立IP网关)，宿主机允许addr和gateway为内网IP或外网IP，已自动识别</li><li>vmbr0创建支持开设纯IPV4、纯IPV6、双栈虚拟机，自动识别IPV4地址和IPV6地址，自动识别对应的IP区间</li><li>安装PVE开虚拟机需要的必备工具包</li><li>x86_64的替换apt源中的企业订阅为社区源，arm的使用第三方修复的补丁构建的源</li><li>打印查询Linux系统内核和PVE内核是否已安装</li><li>设置DNS检测<code>8.8.8.8</code>的开机自启添加DNS的systemd服务</li><li>新增PVE的APT源链接后，下载PVE并打印输出登陆信息</li></ul><p>所有修改过的文件均已设置为只读模式，避免重启后文件被覆写，如需修改请使用<code>chattr -i 文件路径</code>取消只读锁定，修改完毕请执行<code>chattr +i 文件路径</code>进行只读锁定</p><p>执行过程中会提示重启系统一次，<strong>重启后务必等待起码20秒确保系统未再次自动重启</strong>，因为原始环境可能缺失<code>ifupdown</code>或<code>ifupdown2</code>环境，有加载安装的守护进程进行安装，安装后会再次自动重启系统，等待20秒未自重启确保这个安装已运行完毕.</p><p>如果你需要将新安装的PVE纳管进入已有的集群，那么这块安装的时候，名字就不能回车默认使用<code>pve</code>，需要换一个名字避免和集群内的pve本身的hostname冲突.</p><p>若宿主机本身存在SLAAC分配的IPV6地址，将可选择是否使用最大的IPV6子网范围，默认回车不使用最大的IPV6子网范围仅使用本机IPV6，若后续需要给虚拟机/容器附加独立的IPV6地址，该选项务必选择<code>y</code>.</p><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/install_pve.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/install_pve.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span></span></code></pre></div><p>或</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_pve.sh</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>安装成功后打开网页可能提示不安全，点击高级或更多选项，坚持访问即可</p></div><p>登录的信息是你SSH的账户和密码</p><h3 id="预配置环境" tabindex="-1">预配置环境 <a class="header-anchor" href="#预配置环境" aria-label="Permalink to &quot;预配置环境&quot;">​</a></h3><ul><li>创建资源池mypool(local)</li><li>移除订阅弹窗</li><li>尝试开启硬件直通</li><li>对AppArmor模块检测和自动安装</li><li>重启系统前推荐挂上<a href="https://github.com/naiba/nezha" target="_blank" rel="noreferrer">nezha探针</a>方便在后台不通过SSH使用命令行，避免SSH可能因为商家奇葩的预设可能导致重启后root密码丢失</li><li>执行<code>reboot</code>前需要等待后台任务执行完毕，一些宿主机的系统apt命令执行很慢，得等一会才能执行完毕，当然大部分的机器没这么烂，如果很久都起不来ssh无法连接，那么尝试通过控制面板重启一下服务器</li></ul><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-check-certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/build_backend.sh)</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-check-certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/build_backend.sh)</span></span></code></pre></div><h3 id="自动配置宿主机的网关" tabindex="-1">自动配置宿主机的网关 <a class="header-anchor" href="#自动配置宿主机的网关" aria-label="Permalink to &quot;自动配置宿主机的网关&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>使用前请保证重启过服务器且此时PVE能正常登录进WEB端再执行，重启机器后不要立即执行此命令，待WEB端启动并可登录成功后至少等1分钟再执行本命令</strong> 如果WEB端起不来，执行<code>systemctl status pveproxy</code>查看是否启动，如果卡住未启动，执行<code>systemctl start pveproxy</code>启动WEB端。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这一步是最容易造成SSH断开的，原因是未等待PVE内核启动就修改网络会造成设置冲突，所以至少等几分钟待内核启动也就是WEB端启动成功后再执行。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在执行本命令前如果宿主机需要附加IPV6隧道(给没有IPV6地址的宿主机添加IPV6子网)，请查看<a href="https://www.spiritlhl.net/guide/incus/incus_custom.html#%E7%BB%99%E5%AE%BF%E4%B8%BB%E6%9C%BA%E9%99%84%E5%8A%A0%E5%85%8D%E8%B4%B9%E7%9A%84ipv6%E5%9C%B0%E5%9D%80%E6%AE%B5" target="_blank" rel="noreferrer">IPV6免费子网附加</a>部分的内容附加到对应的配置文件中，但请<strong>忽略</strong>&lt;初始环境修改&gt;的操作，直接进行附加，附加后验证有IPV6地址了再执行下面的一键配置网关的命令。</p></div><ul><li>如果vmbr0未创建，则自动创建，逻辑同主体安装一致</li><li>创建vmbr1(NAT网关)，支持开设NAT的IPV6网络的NAT的IPV4的服务器</li><li>创建vmbr2(独立IPV6网关)，使用ndppd解决宿主机对IPV6地址进行MAC校验的问题，支持开设带独立IPV6网络的服务器</li><li>想查看完整设置可以执行<code>cat /etc/network/interfaces</code>查看，如需修改网关需要修改该文件，web端已经无法修改</li><li>加载iptables并设置回源且允许NAT端口转发</li></ul><p>简单的说，<code>vmbr0</code>负责v4的独立IP，<code>vmbr1</code>负责复杂v4/v6的NAT，<code>vmbr2</code>负责v6的独立IP</p><p>开独立IPV4的虚拟机时使用的vmbr0，gateway同宿主机，IPV4/CIDR使用同一网段的地址和相同的子网掩码，使用宿主机未绑定的IPV4地址做IPV4/CIDR，当然如果后续使用本套脚本无需关注这点细枝末节的东西</p><p>开NAT的IPV4的虚拟机时使用vmbr1，gateway使用<code>172.16.1.1</code>，IPV4/CIDR使用<code>172.16.1.x/24</code>，这里的x不能是1，当然如果后续使用本套脚本无需关注这点细枝末节的东西</p><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-check-certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/build_nat_network.sh)</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-check-certificate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/build_nat_network.sh)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这一步是可能需要你执行成功几分钟后重启系统，详见脚本最后执行完毕的提示，但重启可以保证部分隐藏设置加载成功，有条件务必重启一次服务器</p></div><p>到这一步主体安装完毕。</p><h2 id="在物理机器上进行安装" tabindex="-1">在物理机器上进行安装 <a class="header-anchor" href="#在物理机器上进行安装" aria-label="Permalink to &quot;在物理机器上进行安装&quot;">​</a></h2><p>本方法安装的Proxmox<strong>不可</strong>后续使用本项目的所有脚本。</p><p>本方法未大规模测试和适配，仅本人在本地机器上安装了PVE8.4，路由器本身使用的不是<code>自动获取IP地址</code>而是<code>固定IP地址连接</code>的方式，如有问题对应仓库开issues.</p><h3 id="u盘刻录官方iso" tabindex="-1">U盘刻录官方ISO <a class="header-anchor" href="#u盘刻录官方iso" aria-label="Permalink to &quot;U盘刻录官方ISO&quot;">​</a></h3><p>官方ISO下载地址：</p><p><a href="https://www.proxmox.com/en/downloads/proxmox-virtual-environment/iso" target="_blank" rel="noreferrer">https://www.proxmox.com/en/downloads/proxmox-virtual-environment/iso</a></p><p>需要提前下载到本地</p><p>同时还需要一个读写速率比较好的U盘，用于制作启动盘，由于启动盘需要使用rufus进行启动盘制作，所以需要U盘格式化，需要确保U盘制作前为空U盘</p><p>rufus下载地址(下载到你的本地，不是U盘中)：</p><p><a href="https://rufus.ie/zh/" target="_blank" rel="noreferrer">https://rufus.ie/zh/</a></p><p>或</p><p><a href="https://github.com/pbatard/rufus" target="_blank" rel="noreferrer">https://github.com/pbatard/rufus</a></p><p>刻录需要使用DD方式进行刻录，刻录完毕后U盘原数据会被完全擦除。</p><h3 id="pve主体安装-1" tabindex="-1">PVE主体安装 <a class="header-anchor" href="#pve主体安装-1" aria-label="Permalink to &quot;PVE主体安装&quot;">​</a></h3><p>查找宿主机本身如何进入BIOS，进入BIOS后修改两处地方</p><ol><li><p>安全启动需要关闭</p></li><li><p>Boot的顺序需要将USB的顺序移动到第一位</p></li></ol><p>然后保存设置，然后插入U盘，重新启动系统，选择使用图形界面进行安装</p><p>FQDN需要填写一个网址，可以填写类似 pve.spiritlhl.net 这样的网址，最好是你拥有的域名的一个子域名，不是实际的域名的话写成类似 pve.localsite.com 也行，后续不一定用得到</p><p>安装完毕后会自动关机重启，重启黑屏后可以拔掉USB，避免又从U盘重启安装了，当然如果忘了又重启到安装页面了，关闭机器后拔掉U盘再启动也行</p><h3 id="无线网络配置" tabindex="-1">无线网络配置 <a class="header-anchor" href="#无线网络配置" aria-label="Permalink to &quot;无线网络配置&quot;">​</a></h3><p>下载所需的压缩文件和shell脚本</p><p><a href="https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/refs/heads/main/extra_scripts/wireless/wireless.zip" target="_blank" rel="noreferrer">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/refs/heads/main/extra_scripts/wireless/wireless.zip</a></p><p><a href="https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/refs/heads/main/extra_scripts/wireless/wireless.sh" target="_blank" rel="noreferrer">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/refs/heads/main/extra_scripts/wireless/wireless.sh</a></p><p>下载完成后，解压压缩包，将<code>wireless</code>的文件夹拖入一个新的U盘的根目录，同时<code>wireless.sh</code>文件也得放到根目录。</p><p>U盘插到物理机器后，需要挂载U盘，这里的sdx1是第一条命令查询到的U盘的实际路径，需要自行修改</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre></div><p>U盘内的<code>wireless.zip</code>需要确保已解压，打开可见其中的deb文件</p><p>此时直接执行一键配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/wireless.sh</span></span></code></pre></div><p>配置完毕会自动重启系统，重启后会有公共网络</p><p>配置脚本执行过程中会提示输入WIFI的名字和密码，由于纯CI环境无中文输入法，WIFI的名字必须仅英文数字组成，密码也是</p><h3 id="其他相关默认配置" tabindex="-1">其他相关默认配置 <a class="header-anchor" href="#其他相关默认配置" aria-label="Permalink to &quot;其他相关默认配置&quot;">​</a></h3><p>下载脚本，类似上面一步那样导入文件</p><p><a href="https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/refs/heads/main/extra_scripts/wireless/default.sh" target="_blank" rel="noreferrer">https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/pve/refs/heads/main/extra_scripts/wireless/default.sh</a></p><p>使用前务必确保<code>curl ip.sb</code>无问题</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default.sh</span></span></code></pre></div><p>执行会非常耗时，但装完后会自带xfce的桌面环境，且换源阿里云，且去除无效订阅，且设置合并local和loacl-lvm，且设置清华镜像容器源</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><p>物理机安装无限模块后不可使用NAT直接连接虚拟机接入网络，所以本项目后续的教程不支持该方法接入的网桥，本项目后续脚本不支持本方法安装的Proxmox.</p><p>目前可行的无线模块在PVE上使用的成功案例，都要求WIFI路由器接入网络的方式是<code>自动获取IP地址(DHCP)</code>(后续使用openwrt或ikuai或直接nat后虚拟机内网络可用)，或可在路由器上修改静态路由表，如果WIFI路由器使用<code>固定IP地址连接网络</code>，暂时未找到成功案例。</p>`,80)]))}const u=i(l,[["render",p]]);export{k as __pageData,u as default};

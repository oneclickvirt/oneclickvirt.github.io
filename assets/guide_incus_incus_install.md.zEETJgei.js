import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.CSeR4K32.js";const o=JSON.parse('{"title":"Incus","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/incus/incus_install.md","filePath":"guide/incus/incus_install.md","lastUpdated":1761362258000}'),p={name:"guide/incus/incus_install.md"};function l(h,s,e,k,d,c){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="incus" tabindex="-1">Incus <a class="header-anchor" href="#incus" aria-label="Permalink to &quot;Incus&quot;">​</a></h1><p>如果你的宿主机本身没有IPV6的子网又想给容器分配IPV6地址，那么请先查看<code>incus</code>模块中的<code>自定义</code>分区中的<code>给宿主机附加免费的IPV6地址段</code>的内容，给宿主机附加上IPV6子网后再进行环境安装</p><h2 id="开设虚拟内存-swap-非必须的可选项" tabindex="-1">开设虚拟内存(SWAP)(非必须的可选项) <a class="header-anchor" href="#开设虚拟内存-swap-非必须的可选项" aria-label="Permalink to &quot;开设虚拟内存(SWAP)(非必须的可选项)&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>内存开点swap免得机器炸了，如果你的宿主机内存不够用硬盘又很多空闲的话</p></div><p>单位换算：输入 1024 产生 1G SWAP-虚拟内存，虚拟内存占用硬盘空间。</p><p>当实际内存不够用时将自动使用虚拟内存做内存使用，但随之带来IO高占用以及CPU性能占用。</p><p>参考本组织相关项目的说明 <a href="https://github.com/oneclickvirt/ecs/blob/master/README_NEW_USER.md" target="_blank" rel="noreferrer">跳转</a> 这块开设虚拟内存的大小</p><table tabindex="0"><thead><tr><th>物理内存大小</th><th>推荐 SWAP 大小</th></tr></thead><tbody><tr><td>≤ 2G</td><td>内存的 2 倍</td></tr><tr><td>2G &lt; 内存 ≤ 8G</td><td>等于物理内存大小</td></tr><tr><td>≥ 8G</td><td>约 8G 即可</td></tr><tr><td>需要休眠 (hibernation)</td><td>至少等于物理内存大小</td></tr></tbody></table><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/spiritLHLS/addswap/main/addswap.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/spiritLHLS/addswap/main/addswap.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addswap.sh</span></span></code></pre></div><h2 id="incus主体安装" tabindex="-1">Incus主体安装 <a class="header-anchor" href="#incus主体安装" aria-label="Permalink to &quot;Incus主体安装&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果是全新的服务器，务必保证<code>curl</code>命令可用且<code>update</code>无问题再执行本脚本。</p></div><ul><li>环境要求：Ubuntu 20+(不推荐Incus请使用LXD), Debian 11+(推荐), RockyLinux 9+, AlmaLinux 9+, Centos 9+</li><li>安装过程中会提示输入存储池创建路径以及大小，你所有要开的虚拟机或容器最终占用的空间是在存储池中</li><li>环境安装过程后需要重启服务器以加载一些默认配置</li><li>默认启用lxd的lxcfs相关配置，使得容器内查询容器信息变更为容器本身的信息而不是宿主机信息</li><li>实测本安装程序在物理机器或非物理机器上都可使用</li></ul><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/incus/main/scripts/incus_install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/incus/main/scripts/incus_install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span></span></code></pre></div><p>或</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> incus_install.sh</span></span></code></pre></div><p>初始化配置的例子：</p><p>如果不需要指定非系统盘的路径做默认存储池，那么选择是否自定义存储池路径时直接回车或输入<code>n</code>即可，不需要指定路径。</p><p>如果需要指定非系统盘的路径做默认的存储池，那么需要选择<code>y</code>，然后输入对应的路径(你挂载的盘的实际的绝对路径)。</p><p>如果对应的盘除去已占用空间还有18G硬盘空余，想要开设15G的存储池，按照命令行的提示则输入<code>15</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>执行过程中<strong>可能</strong>会要求<strong>手动重启</strong>加载存储类型到内核中，安装完毕执行到最后会<strong>自动进行服务器重启</strong>，首次完整安装完毕后的自动重启最多大概耗时400~500秒，请耐心等待</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果你需要在一台服务器上开启超过200个INCUS容器，那么不推荐你使用本项目，可能会出现lxcfs访问漂移的问题，产生IO占用无法释放。(系lxc原生问题无法修复)</p></div><h2 id="手动安装-备选" tabindex="-1">手动安装(备选) <a class="header-anchor" href="#手动安装-备选" aria-label="Permalink to &quot;手动安装(备选)&quot;">​</a></h2><p>不推荐，只是为了一些奇葩环境一键脚本跑不动的时候进行安装，或则你想要了解最基础的Incus安装流程。</p><h3 id="关闭防火墙" tabindex="-1">关闭防火墙 <a class="header-anchor" href="#关闭防火墙" aria-label="Permalink to &quot;关闭防火墙&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dos2unix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span></span></code></pre></div><h3 id="开设虚拟内存swap" tabindex="-1">开设虚拟内存SWAP <a class="header-anchor" href="#开设虚拟内存swap" aria-label="Permalink to &quot;开设虚拟内存SWAP&quot;">​</a></h3><p>内存看你开多少服务器，这里如果要开8个，换算需要2G内存，实际内存如果是512MB内存，还需要开1.5G，保守点开2G虚拟内存即可</p><p>执行下面命令，输入1，再输入2048，代表开2G虚拟内存</p><p>国际</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/oneclickvirt/incus/main/scripts/swap.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swap.sh</span></span></code></pre></div><p>国内</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.spiritlhl.net/https://raw.githubusercontent.com/oneclickvirt/incus/main/scripts/swap.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swap.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> swap.sh</span></span></code></pre></div><h3 id="安装incus" tabindex="-1">安装incus <a class="header-anchor" href="#安装incus" aria-label="Permalink to &quot;安装incus&quot;">​</a></h3><p>实际swap开的虚拟内存应该是实际内存的2倍，也就是开1G是合理的，上面我描述的情况属于超开了</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo -i</span></span>
<span class="line"><span>mkdir -p /etc/apt/keyrings/</span></span>
<span class="line"><span>curl -fsSL https://pkgs.zabbly.com/key.asc | gpg --dearmor -o /etc/apt/keyrings/zabbly.gpg</span></span>
<span class="line"><span>sh -c &#39;cat &lt;&lt;EOF &gt; /etc/apt/sources.list.d/zabbly-incus-stable.sources</span></span>
<span class="line"><span>Enabled: yes</span></span>
<span class="line"><span>Types: deb</span></span>
<span class="line"><span>URIs: https://pkgs.zabbly.com/incus/stable</span></span>
<span class="line"><span>Suites: $(. /etc/os-release &amp;&amp; echo \${VERSION_CODENAME})</span></span>
<span class="line"><span>Components: main</span></span>
<span class="line"><span>Architectures: $(dpkg --print-architecture)</span></span>
<span class="line"><span>Signed-By: /etc/apt/keyrings/zabbly.gpg</span></span>
<span class="line"><span>EOF&#39;</span></span>
<span class="line"><span>apt-get update</span></span>
<span class="line"><span>apt-get install incus -y</span></span>
<span class="line"><span>incus -h</span></span></code></pre></div><p>如果无异常，继续执行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>incus admin init</span></span></code></pre></div><p>一般的选项回车默认即可</p><p>选择配置物理盘大小(提示默认最小1GB那个选项)，一般我填空闲磁盘大小减去内存大小后乘以0.95并向下取整，这里我填了10GB</p><p>提示带auto的更新image的选项记得选no，避免更新占用系统</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>incus -h</span></span></code></pre></div>`,47)]))}const g=i(p,[["render",l]]);export{o as __pageData,g as default};
